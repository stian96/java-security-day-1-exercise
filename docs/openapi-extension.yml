openapi: 3.0.0
info:
  title: Video Game Library API
  version: 2.0.0
  description: API for managing a video game library, including games and users who can borrow games.

paths:
  /games:
    get:
      summary: Get all games
      security:
        - adminAuth: []
      responses:
        '200':
          description: A list of video games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
    post:
      summary: Add a new game
      security:
        - adminAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '201':
          description: Game created successfully

  /games/{id}:
    get:
      summary: Get a specific game by ID
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single video game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    put:
      summary: Update an existing game
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Game updated successfully
    delete:
      summary: Delete a game
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Game deleted successfully

  /users:
    get:
      summary: Get all users
      security:
        - adminAuth: []
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Add a new user
      security:
        - adminAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully

  /users/{id}:
    get:
      summary: Get a specific user by ID
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update an existing user
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete a user
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully

  /users/{id}/borrowedGames:
    get:
      summary: Get games borrowed by a specific user
      security:
        - adminAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of games borrowed by the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'

  /borrow:
    post:
      summary: Borrow a game
      security:
        - adminAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowRequest'
      responses:
        '200':
          description: Game borrowed successfully

  /return:
    post:
      summary: Return a borrowed game
      security:
        - adminAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnRequest'
      responses:
        '200':
          description: Game returned successfully

components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        gameStudio:
          type: string
        ageRating:
          type: string
        numberOfPlayers:
          type: integer
        genre:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    BorrowRequest:
      type: object
      properties:
        userId:
          type: integer
        gameId:
          type: integer
    ReturnRequest:
      type: object
      properties:
        userId:
          type: integer
        gameId:
          type: integer

securitySchemes:
  adminAuth:
    type: http
    scheme: basic
